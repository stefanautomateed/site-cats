---
import Base from '../../layouts/Base.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
// Category listing page using `frontmatter.cluster`
export async function getStaticPaths() {
  const modules = import.meta.glob('../../../content/**/*.mdx');
  const loaded = await Promise.all(Object.values(modules).map((l) => l()));
  const posts = loaded
    .map((m: any) => ({
      title: m.frontmatter?.title,
      slug: m.frontmatter?.slug,
      cluster: m.frontmatter?.cluster || 'Uncategorized',
      date: m.frontmatter?.date || ''
    }))
    .filter((p) => p.slug);

  const clusters = Array.from(new Set(posts.map((p) => p.cluster)));
  return clusters.map((c) => ({ params: { category: c }, props: { category: c, posts } }));
}

const { category, posts } = Astro.props as { category: string; posts: Array<{ title: string; slug: string; cluster: string; date: string }>; };
const items = posts.filter((p) => p.cluster === category);
---
<Base title={category}>
  <Fragment slot="header"><Header /></Fragment>
  <h1>{category}</h1>
  <div style="display:grid;grid-template-columns:repeat(auto-fill,minmax(260px,1fr));gap:16px;">
    {items.map((p) => (
      <a href={`/site/${p.slug}/`} style="display:block;background:#0b1020;border:1px solid #1f2937;border-radius:12px;overflow:hidden;color:#e2e8f0;text-decoration:none;">
        {p.image && <img src={p.image} alt={p.title} style="width:100%;height:160px;object-fit:cover;border-bottom:1px solid #1f2937;" />}
        <div style="padding:12px 14px;">
          <div style="font-weight:700;line-height:1.3;">{p.title}</div>
        </div>
      </a>
    ))}
  </div>
  <Fragment slot="footer"><Footer /></Fragment>
</Base>

